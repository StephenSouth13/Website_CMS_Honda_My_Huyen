import { useState } from "react";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { Skeleton } from "@/components/ui/skeleton";
import { useToast } from "@/hooks/use-toast";
import { apiRequest } from "@/lib/queryClient";
import { insertTestDriveRequestSchema } from "@shared/schema";
import { Check, Send, Calendar, Phone, User, MessageSquare } from "lucide-react";
import type { Motorcycle, InsertTestDriveRequest } from "@shared/schema";

export default function TestDrivePage() {
  const { toast } = useToast();
  const queryClient = useQueryClient();
  const [isSubmitted, setIsSubmitted] = useState(false);

  const { data: motorcycles, isLoading: motorcyclesLoading } = useQuery<Motorcycle[]>({
    queryKey: ["/api/motorcycles"],
  });

  const form = useForm<InsertTestDriveRequest>({
    resolver: zodResolver(insertTestDriveRequestSchema),
    defaultValues: {
      fullName: "",
      phone: "",
      motorcycleId: undefined,
      preferredDate: "",
      notes: "",
    },
  });

  const testDriveMutation = useMutation({
    mutationFn: async (data: InsertTestDriveRequest) => {
      const response = await apiRequest("POST", "/api/test-drive", data);
      return response.json();
    },
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ["/api/test-drive"] });
      toast({
        title: "ƒêƒÉng k√Ω th√†nh c√¥ng!",
        description: "Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n trong v√≤ng 24h ƒë·ªÉ x√°c nh·∫≠n l·ªãch h·∫πn.",
      });
      setIsSubmitted(true);
      form.reset();
    },
    onError: () => {
      toast({
        title: "C√≥ l·ªói x·∫£y ra",
        description: "Vui l√≤ng th·ª≠ l·∫°i sau ho·∫∑c li√™n h·ªá hotline ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.",
        variant: "destructive",
      });
    },
  });

  const onSubmit = (data: InsertTestDriveRequest) => {
    testDriveMutation.mutate(data);
  };

  if (isSubmitted) {
    return (
      <div className="py-20 bg-honda-gray-light min-h-screen">
        <div className="container mx-auto px-4">
          <Card className="max-w-2xl mx-auto">
            <CardContent className="p-12 text-center">
              <div className="w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-6">
                <Check className="h-8 w-8 text-white" />
              </div>
              <h2 className="text-2xl font-bold text-honda-black mb-4">
                ƒêƒÉng k√Ω l√°i th·ª≠ th√†nh c√¥ng!
              </h2>
              <p className="text-honda-gray mb-8">
                C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω l√°i th·ª≠ xe Honda t·∫°i ƒë·∫°i l√Ω M·ªπ Huy·ªÅn. 
                Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n trong v√≤ng 24 gi·ªù ƒë·ªÉ x√°c nh·∫≠n l·ªãch h·∫πn.
              </p>
              <div className="space-y-4 text-left bg-honda-gray-light p-6 rounded-lg mb-8">
                <h3 className="font-semibold text-honda-black">Th√¥ng tin li√™n h·ªá:</h3>
                <p className="text-honda-gray">üìû Hotline: 1900-1234</p>
                <p className="text-honda-gray">üì± Mobile: 0901-234-567</p>
                <p className="text-honda-gray">üïí Gi·ªù l√†m vi·ªác: Th·ª© 2-7 (8:00-18:00)</p>
              </div>
              <Button 
                onClick={() => setIsSubmitted(false)}
                className="btn-honda text-white"
              >
                ƒêƒÉng k√Ω l√°i th·ª≠ xe kh√°c
              </Button>
            </CardContent>
          </Card>
        </div>
      </div>
    );
  }

  return (
    <div className="py-20 bg-honda-gray-light min-h-screen">
      <div className="container mx-auto px-4">
        <div className="grid lg:grid-cols-2 gap-12 items-center">
          {/* Left Content */}
          <div>
            <h1 className="text-4xl lg:text-5xl font-bold text-honda-black mb-6">
              ƒêƒÉng k√Ω l√°i th·ª≠
            </h1>
            <p className="text-xl text-honda-gray mb-8">
              Tr·∫£i nghi·ªám c·∫£m gi√°c l√°i xe Honda tr∆∞·ªõc khi quy·∫øt ƒë·ªãnh mua. 
              Ch√∫ng t√¥i s·∫µn s√†ng cho b·∫°n test ride mi·ªÖn ph√≠.
            </p>

            <div className="space-y-4 mb-8">
              <div className="flex items-center space-x-4">
                <div className="w-8 h-8 bg-honda-red rounded-full flex items-center justify-center">
                  <Check className="text-white h-4 w-4" />
                </div>
                <span className="text-honda-gray">L√°i th·ª≠ mi·ªÖn ph√≠ t·∫•t c·∫£ c√°c d√≤ng xe</span>
              </div>
              <div className="flex items-center space-x-4">
                <div className="w-8 h-8 bg-honda-red rounded-full flex items-center justify-center">
                  <Check className="text-white h-4 w-4" />
                </div>
                <span className="text-honda-gray">C√≥ nh√¢n vi√™n t∆∞ v·∫•n ƒëi c√πng</span>
              </div>
              <div className="flex items-center space-x-4">
                <div className="w-8 h-8 bg-honda-red rounded-full flex items-center justify-center">
                  <Check className="text-white h-4 w-4" />
                </div>
                <span className="text-honda-gray">Th·ªùi gian linh ho·∫°t theo y√™u c·∫ßu</span>
              </div>
            </div>

            <img
              src="https://images.unsplash.com/photo-1580273916550-e323be2ae537?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=500"
              alt="Showroom Honda M·ªπ Huy·ªÅn"
              className="rounded-2xl shadow-lg w-full"
            />
          </div>

          {/* Right Form */}
          <Card className="bg-white shadow-lg">
            <CardContent className="p-8 lg:p-12">
              <h3 className="text-2xl font-bold text-honda-black mb-8 text-center">
                ƒê·∫∑t l·ªãch l√°i th·ª≠ ngay
              </h3>

              <Form {...form}>
                <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
                  <FormField
                    control={form.control}
                    name="fullName"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel className="flex items-center space-x-2">
                          <User className="h-4 w-4" />
                          <span>H·ªç v√† t√™n *</span>
                        </FormLabel>
                        <FormControl>
                          <Input
                            placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n"
                            {...field}
                          />
                        </FormControl>
                        <FormMessage />
                      </FormItem>
                    )}
                  />

                  <FormField
                    control={form.control}
                    name="phone"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel className="flex items-center space-x-2">
                          <Phone className="h-4 w-4" />
                          <span>S·ªë ƒëi·ªán tho·∫°i *</span>
                        </FormLabel>
                        <FormControl>
                          <Input
                            type="tel"
                            placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                            {...field}
                          />
                        </FormControl>
                        <FormMessage />
                      </FormItem>
                    )}
                  />

                  <FormField
                    control={form.control}
                    name="motorcycleId"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel>D√≤ng xe mu·ªën l√°i th·ª≠ *</FormLabel>
                        <Select
                          onValueChange={(value) => field.onChange(parseInt(value))}
                          value={field.value?.toString()}
                        >
                          <FormControl>
                            <SelectTrigger>
                              <SelectValue placeholder="Ch·ªçn d√≤ng xe" />
                            </SelectTrigger>
                          </FormControl>
                          <SelectContent>
                            {motorcyclesLoading ? (
                              <div className="p-2">
                                <Skeleton className="h-8 w-full" />
                              </div>
                            ) : (
                              motorcycles?.map((motorcycle) => (
                                <SelectItem
                                  key={motorcycle.id}
                                  value={motorcycle.id.toString()}
                                >
                                  {motorcycle.name}
                                </SelectItem>
                              ))
                            )}
                          </SelectContent>
                        </Select>
                        <FormMessage />
                      </FormItem>
                    )}
                  />

                  <FormField
                    control={form.control}
                    name="preferredDate"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel className="flex items-center space-x-2">
                          <Calendar className="h-4 w-4" />
                          <span>Ng√†y h·∫πn *</span>
                        </FormLabel>
                        <FormControl>
                          <Input
                            type="date"
                            {...field}
                          />
                        </FormControl>
                        <FormMessage />
                      </FormItem>
                    )}
                  />

                  <FormField
                    control={form.control}
                    name="notes"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel className="flex items-center space-x-2">
                          <MessageSquare className="h-4 w-4" />
                          <span>Ghi ch√∫</span>
                        </FormLabel>
                        <FormControl>
                          <Textarea
                            rows={4}
                            placeholder="Ghi ch√∫ th√™m v·ªÅ y√™u c·∫ßu c·ªßa b·∫°n..."
                            {...field}
                          />
                        </FormControl>
                        <FormMessage />
                      </FormItem>
                    )}
                  />

                  <Button
                    type="submit"
                    disabled={testDriveMutation.isPending}
                    className="w-full btn-honda text-white py-4 font-semibold text-lg"
                  >
                    {testDriveMutation.isPending ? (
                      "ƒêang g·ª≠i..."
                    ) : (
                      <>
                        <Send className="mr-2 h-4 w-4" />
                        G·ª≠i ƒëƒÉng k√Ω l√°i th·ª≠
                      </>
                    )}
                  </Button>
                </form>
              </Form>

              <p className="text-sm text-honda-gray text-center mt-4">
                Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n trong v√≤ng 24h ƒë·ªÉ x√°c nh·∫≠n l·ªãch h·∫πn
              </p>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}
